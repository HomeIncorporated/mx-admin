import{B as d,g as h,s as m,d as b,i as g,c as w,a as k,e as O,H as p,b as E}from"./class-7vo2WPyo.js";import"./index-IRfrO0r8.js";import"./last-DXTTfs9a.js";import"./confetti-CVjmQRLP.js";class L extends d{constructor({callbackSelector:a,cause:e,data:o,extraData:n,sender:c,urls:r}){super(e.shortMessage||"An error occurred while fetching for an offchain result.",{cause:e,metaMessages:[...e.metaMessages||[],e.metaMessages?.length?"":[],"Offchain Gateway Call:",r&&["  Gateway URL(s):",...r.map(i=>`    ${h(i)}`)],`  Sender: ${c}`,`  Data: ${o}`,`  Callback selector: ${a}`,`  Extra data: ${n}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class x extends d{constructor({result:a,url:e}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${h(e)}`,`Response: ${m(a)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class M extends d{constructor({sender:a,to:e}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${e}`,`OffchainLookup sender address: ${a}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}const A="0x556f1830",R={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function D(u,{blockNumber:a,blockTag:e,data:o,to:n}){const{args:c}=b({data:o,abi:[R]}),[r,i,t,s,f]=c;try{if(!g(n,r))throw new M({sender:r,to:n});const l=await $({data:t,sender:r,urls:i}),{data:y}=await w(u,{blockNumber:a,blockTag:e,data:k([s,O([{type:"bytes"},{type:"bytes"}],[l,f])]),to:n});return y}catch(l){throw new L({callbackSelector:s,cause:l,data:o,extraData:f,sender:r,urls:i})}}async function $({data:u,sender:a,urls:e}){let o=new Error("An unknown error occurred.");for(let n=0;n<e.length;n++){const c=e[n],r=c.includes("{data}")?"GET":"POST",i=r==="POST"?{data:u,sender:a}:void 0;try{const t=await fetch(c.replace("{sender}",a).replace("{data}",u),{body:JSON.stringify(i),method:r});let s;if(t.headers.get("Content-Type")?.startsWith("application/json")?s=(await t.json()).data:s=await t.text(),!t.ok){o=new p({body:i,details:s?.error?m(s.error):t.statusText,headers:t.headers,status:t.status,url:c});continue}if(!E(s)){o=new x({result:s,url:c});continue}return s}catch(t){o=new p({body:i,details:t.message,url:c})}}throw o}export{$ as ccipFetch,D as offchainLookup,R as offchainLookupAbiItem,A as offchainLookupSignature};
